@model PaginatedList<MagazynApp.Models.Product>


@{
    ViewData["Title"] = "Index";
}

@{
    Layout = "Product_Layout";
}

<h1>
    Produkty
    @TempData["Message"]
</h1>

<p>
    <a class="btn-smallblack" style="width:450px" asp-action="Create">Dodaj nowy produkt</a>
</p>
<div>
    <p>
        Wybierz ilość elementów:
        <a class="btn-smallblack"  asp-controller="Products" asp-action="Index" asp-route-setPageSize="set10">10</a>
        <a class="btn-smallblack"  asp-controller="Products" asp-action="Index" asp-route-setPageSize="set20">20</a>
        <a class="btn-smallblack" asp-controller="Products" asp-action="Index" asp-route-setPageSize="set100">100</a>
        <a class="btn-smallblack"  asp-controller="Products" asp-action="Index" asp-route-setPageSize="setAll">Wszystkie</a>
    </p>
</div>
<form asp-controller="Products" asp-action="Index" method="get">
    <p style="font-size:16px">
        Znajdz po nazwie: <input id="text-black" type="text" name="searchString" />
        <input class="btn-black" style="position:absolute; margin-left: 20px; margin-top: -5px;" type="submit" value="Filtruj" />
    </p>
</form>




<table class="table">
    <thead>
        <tr>
            <th>
                <a style="color: black" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"  asp-route-currentFilter="@ViewData["CurrentFilter"]">Nazwa</a>
            </th>
            <th>
                <a style="color: black" asp-action="Index" asp-route-sortOrder="@ViewData["QuantitySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Ilosc</a>
            </th>
            <th>
                <a style="color: black" asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Cena</a>
            </th>
            <th>
                <a style="color: black" asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Typ</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.Name)
                </td>
                <td>
                    <a style="color: black" asp-action="Edit" asp-route-id="@item.Id">Edytuj</a> |
                    <a style="color: black" asp-action="Details" asp-route-id="@item.Id">Szczegóły</a> |
                    <a style="color: black" asp-action="Delete" asp-route-id="@item.Id">Usuń</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
